<?xml version="1.0" encoding="UTF-8"?>
<project name="jutils" default="zip.plugin" basedir=".">

	<property name="bootclasspath" value=""/>
	<property name="ws" value="win32"/>
	<property name="os" value="win32"/>
	<property name="arch" value="x86"/>
	<property name="build.workdir" value="export"/>

	<!-- =================================
          target: init
         ================================= -->
	<target name="init" depends="properties">
		<property name="plugin" value="jutils"/>
		<property name="version.suffix" value="_3.3.0"/>
		<property name="full.name" value="${plugin}${version.suffix}"/>
		<property name="temp.folder" value="${build.workdir}/temp.folder"/>
		<property name="plugin.destination" value="${build.workdir}"/>
		<property name="build.result.folder" value="${build.workdir}"/>
	</target>


	<!-- =================================
          target: properties
         ================================= -->
	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<!-- =================================
          target: build.update.jar
         ================================= -->
	<target name="build.update.jar" depends="init">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/${full.name}.jar" basedir="${temp.folder}/${full.name}" filesonly="false" update="no"/>
		<delete dir="${temp.folder}"/>
	</target>

	<!-- =================================
          target: gather.bin.parts
         ================================= -->
	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${build.result.folder}/jutils.jar" todir="${destination.temp.folder}/${full.name}"/>
		<copy todir="${destination.temp.folder}/${full.name}">
			<!--<fileset dir="${basedir}" includes="plugin.xml,*.jar,DevLoader.zip,*.txt,*.html,icons/*,img/*,plugin*.properties"/>-->
			<fileset dir="${basedir}" includes="plugin.xml,*.txt,*.html,icons/*,img/*,plugin*.properties"/>
		</copy>
	</target>

	<!-- =================================
          target: jutils.jar
         ================================= -->
	<target name="jutils.jar" depends="init" unless="jutils.jar">
		<property name="destdir" value="${temp.folder}/jutils.jar.bin"/>
		<delete dir="${temp.folder}/jutils.jar.bin"/>
		<mkdir dir="${temp.folder}/jutils.jar.bin"/>
		<!-- compile the source code
		<javac destdir="${temp.folder}/jutils.jar.bin" failonerror="false" verbose="true" debug="on" includeAntRuntime="no" bootclasspath="${bootclasspath}" classpath="D:/java/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.core.boot_2.1.0/boot.jar;D:/java/eclipse/plugins/org.eclipse.swt.win32_2.1.0/ws/${ws}/swt.jar;D:/java/eclipse/plugins/org.eclipse.core.resources.win32_2.1.0/resources.jar;D:/java/eclipse/plugins/org.eclipse.jface.text_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.core.resources_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jface_2.1.0/jface.jar;D:/java/eclipse/plugins/org.eclipse.jface.text_2.1.0/jfacetext.jar;D:/java/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jface_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/launching.jar;D:/java/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.debug.ui_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.ui.editors_2.1.0/editors.jar;D:/java/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/texteditor.jar;D:/java/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.ui.views_2.1.0/views.jar;D:/java/eclipse/plugins/org.eclipse.ui.win32_2.1.0/workbench.jar;D:/java/eclipse/plugins/org.eclipse.ui_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.core.boot_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/jdiui.jar;D:/java/eclipse/plugins/org.eclipse.core.runtime_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jdt.core_2.1.0/jdtcore.jar;D:/java/eclipse/plugins/org.eclipse.jdt.core_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.core.runtime_2.1.0/runtime.jar;D:/java/eclipse/plugins/org.eclipse.text_2.1.0/text.jar;D:/java/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/jdi.jar;D:/java/eclipse/plugins/org.eclipse.debug.core_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.ui_2.1.0/ui.jar;D:/java/eclipse/plugins/org.eclipse.core.resources_2.1.0/resources.jar;D:/java/eclipse/plugins/org.eclipse.swt_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.swt_2.1.0/ws/${ws}/swt.jar;D:/java/eclipse/plugins/org.eclipse.text_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/jdimodel.jar;D:/java/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/tools.jar;D:/java/eclipse/plugins/org.eclipse.ui.editors_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.ui.views_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.debug.ui_2.1.0/dtui.jar;D:/java/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/bin;D:/java/eclipse/plugins/org.eclipse.debug.core_2.1.0/dtcore.jar;D:/java/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/workbench.jar;D:/java/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/jdt.jar;D:/java/eclipse/plugins/org.eclipse.ui.win32_2.1.0/workbenchwin32.jar">
			<src path="src/"/>
		</javac>
		-->
		<!-- copy necessary resources -->
		<copy todir="${temp.folder}/jutils.jar.bin">
			<fileset dir="bin/" includes="**/*"/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/jutils.jar" basedir="${temp.folder}/jutils.jar.bin"/>
		<delete dir="${temp.folder}/jutils.jar.bin"/>
	</target>

	<!-- =================================
          target: jutilsrc.zip
         ================================= -->
	<target name="jutilsrc.zip" depends="init" unless="jutilsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/jutilsrc.zip" filesonly="false" update="no">
<!--			<fileset dir="src/" includes="**/*.java"/>
-->
			<fileset dir="${basedir}" includes="*.classpath,*.project,*.txt,*.xml,*.properties,**/src/**/*.*,**/resources/**/*.*,**/test/**/*.*,**/icons/**/*.*,**/.settings/**/*.*"/>
		</zip>
	</target>

	<!-- =================================
          target: build.jars
         ================================= -->
	<target name="build.jars" depends="init">
		<available property="jutils.jar" file="${build.result.folder}/jutils.jar"/>
		<antcall target="jutils.jar"/>
	</target>

	<!-- =================================
          target: build.sources
         ================================= -->
	<target name="build.sources" depends="init">
		<available property="jutilsrc.zip" file="${build.result.folder}/jutilsrc.zip"/>
		<antcall target="jutilsrc.zip"/>
	</target>

	<!-- =================================
          target: build.zips
         ================================= -->
	<target name="build.zips" depends="init">
	</target>

	<!-- =================================
          target: gather.sources
         ================================= -->
	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${build.result.folder}/jutilsrc.zip" todir="${destination.temp.folder}/${full.name}"/>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${temp.folder}/jutils.jar.bin.log" todir="${destination.temp.folder}/${full.name}"/>
	</target>

	<target name="clean" depends="init">
		<delete file="${build.result.folder}/jutils.jar"/>
		<delete file="${build.result.folder}/jutilsrc.zip"/>
		<delete file="${plugin.destination}/${full.name}.jar"/>
		<delete file="${plugin.destination}/${full.name}.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running">
		<eclipse.refreshLocal resource="${plugin}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init">
		<delete dir="${temp.folder}"/>
		<delete file="${build.result.folder}/jutils.jar"/>
		<delete file="${build.result.folder}/jutilsrc.zip"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.sources"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"/>
		</delete>
		<antcall target="zip.folder"/>
		<delete dir="${temp.folder}"/>
	</target>
	<target name="zip.folder" depends="init">
		<zip zipfile="${plugin.destination}/${full.name}.zip" basedir="${temp.folder}" filesonly="true" update="no" excludes="**/*.bin.log"/>
	</target>

</project>
